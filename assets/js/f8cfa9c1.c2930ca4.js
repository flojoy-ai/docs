"use strict";(self.webpackChunkflojoy_doc=self.webpackChunkflojoy_doc||[]).push([[31556],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),l=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return o.createElement(s.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},c=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),d=l(n),c=r,f=d["".concat(s,".").concat(c)]||d[c]||m[c]||a;return n?o.createElement(f,i(i({ref:t},u),{},{components:n})):o.createElement(f,i({ref:t},u))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=c;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p[d]="string"==typeof e?e:r,i[1]=p;for(var l=2;l<a;l++)i[l]=n[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}c.displayName="MDXCreateElement"},83835:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>p,toc:()=>l});var o=n(87462),r=(n(67294),n(3905));const a={},i=void 0,p={unversionedId:"nodes/LOADERS/CLOUD_DATABASE/LOADER/examples/EX1/example",id:"nodes/LOADERS/CLOUD_DATABASE/LOADER/examples/EX1/example",title:"example",description:"The workflow of this app is described below:",source:"@site/docs/nodes/LOADERS/CLOUD_DATABASE/LOADER/examples/EX1/example.md",sourceDirName:"nodes/LOADERS/CLOUD_DATABASE/LOADER/examples/EX1",slug:"/nodes/LOADERS/CLOUD_DATABASE/LOADER/examples/EX1/example",permalink:"/nodes/LOADERS/CLOUD_DATABASE/LOADER/examples/EX1/example",draft:!1,tags:[],version:"current",frontMatter:{}},s={},l=[],u={toc:l},d="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The workflow of this app is described below:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"43"),(0,r.kt)("a",{parentName:"p",href:"https://github.com/flojoy-io/nodes/blob/main/GENERATORS/SIMULATIONS/CONSTANT/CONSTANT.py"},"CONSTANT")," : This is a CONSTANT node with a value of 43. It passing a DataContainer class of an ordered pair (x, y pair) to the next node ",(0,r.kt)("inlineCode",{parentName:"p"},"LOOP"),", where x is None and y is a NumPy array with a value of 43."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/flojoy-io/nodes/blob/main/LOGIC_GATES/LOOPS/LOOP/LOOP.py"},"LOOP"),": This node is a special type that iterating through all the nodes connected to the body output a specified number of times as defined by its parameter ",(0,r.kt)("inlineCode",{parentName:"p"},"num_loop"),", in this case this set to 2. It passes the value of the previous ",(0,r.kt)("inlineCode",{parentName:"p"},"CONSTANT")," node to the next nodes."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"12"),(0,r.kt)("a",{parentName:"p",href:"https://github.com/flojoy-io/nodes/blob/main/GENERATORS/SIMULATIONS/CONSTANT/CONSTANT.py"},"CONSTANT"),": This is another ",(0,r.kt)("inlineCode",{parentName:"p"},"CONSTANT")," node which value is 12. It passing the value of the previous node's output in the 'x' key and its own output in the 'y' key. e.g: ",(0,r.kt)("inlineCode",{parentName:"p"},"{'x': <output of previous node>, 'y': [12,12,....]}")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"-1"),(0,r.kt)("a",{parentName:"p",href:"https://github.com/flojoy-io/nodes/blob/main/GENERATORS/SIMULATIONS/CONSTANT/CONSTANT.py"},"CONSTANT"),": Another ",(0,r.kt)("inlineCode",{parentName:"p"},"CONSTANT")," node with a negative value of ",(0,r.kt)("inlineCode",{parentName:"p"},"-1"),", performing the same function as the other CONSTANT nodes."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/flojoy-io/nodes/blob/main/GENERATORS/SIMULATIONS/FEEDBACK/FEEDBACK.py"},"FEEDBACK"),": This is another special node that fetching the output of the given node ID in it's parameter ",(0,r.kt)("inlineCode",{parentName:"p"},"referred_node")," in this case it's ",(0,r.kt)("inlineCode",{parentName:"p"},"ADD")," node ",(0,r.kt)("inlineCode",{parentName:"p"},'"ADD-0758c6a8-52b4-4b5b-9c46-2a83bdef2a04"'),", on first iteration it passing the output of previous node and  eventually the output of ",(0,r.kt)("inlineCode",{parentName:"p"},"ADD")," node's output. "),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/flojoy-io/nodes/blob/main/TRANSFORMERS/ARITHMETIC/ADD/ADD.py"},"ADD"),": Adding the value of connected inputs, in this case ",(0,r.kt)("inlineCode",{parentName:"p"},"CONSTANT")," ",(0,r.kt)("inlineCode",{parentName:"p"},"-1")," and output of ",(0,r.kt)("inlineCode",{parentName:"p"},"FEEDBACK")," node."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/flojoy-io/nodes/blob/main/LOADERS/CLOUD_DATABASE/LOADER/LOADER.py"},"LOADER"),": This node imports ",(0,r.kt)("inlineCode",{parentName:"p"},"FRONTIER_API_KEY")," from ",(0,r.kt)("inlineCode",{parentName:"p"},"~/.flojoy/credentials")," file and takes a parameter called ",(0,r.kt)("inlineCode",{parentName:"p"},"measurement_uuid"),", which is the user measurement UUID of Frontier account. Using the ",(0,r.kt)("inlineCode",{parentName:"p"},"FRONTIER_API_KEY")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"measurement_uuid")," sends input measurements to Frontier API on every run. This will throw an error if any of these two keys are not found."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/flojoy-io/nodes/blob/main/LOGIC_GATES/LOOPS/GOTO/GOTO.py"},"GOTO"),": This node refering to the ",(0,r.kt)("inlineCode",{parentName:"p"},"LOOP")," node to check if the specified number of iteration is completed."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/flojoy-io/nodes/blob/main/LOGIC_GATES/TERMINATORS/END/END.py"},"TERMINATE"),": This node terminating the current script run. The output of this node is same as its parent node."))}m.isMDXComponent=!0}}]);