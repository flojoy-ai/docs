from flojoy import flojoy, DataFrame, Matrix
import pandas as pd
import numpy as np
from sklearn import svm, preprocessing
from typing import Literal


@flojoy(deps={"scikit-learn": "1.2.2"})
def SUPPORT_VECTOR_MACHINE(
    train_feature: DataFrame | Matrix,
    train_label: DataFrame | Matrix,
    input_data: DataFrame | Matrix,
    kernel: Literal["linear", "poly", "rbf", "sigmoid", "precomputed"] = "linear",
) -> DataFrame:
    

    le = preprocessing.LabelEncoder()

    if isinstance(train_feature, DataFrame):
        train = train_feature.m.to_numpy()
        col = train_label.m.to_numpy()
        target_name = train_label.m.columns.values[0]

    else:
        train = train_feature.m
        col = train_label.m
        target_name = "target"

    X = train
    Y = le.fit_transform(col)

    clf = svm.SVC(kernel=kernel)
    clf.fit(X, Y)

    if isinstance(input_data, DataFrame):
        input_arr = input_data.m.to_numpy()
    else:
        input_arr = input_data.m

    prediction = clf.predict(input_arr)
    prediction = le.inverse_transform(prediction)
    prediction = pd.DataFrame({target_name: prediction})
    return DataFrame(df=prediction)
