from scipy import signal, fft
from numpy import abs
from flojoy import flojoy, OrderedPair, DataFrame
from pandas import DataFrame as df


@flojoy
def FFT(default: OrderedPair, window_type: str = "none", real: bool = False, sample_rate: int = 1, display: bool = True) -> OrderedPair | DataFrame:
    

    if sample_rate <= 0:
        raise ValueError(f"Sample rate must be greater than 0")

    signal_value = default.y
    x = default.x
    sample_spacing = 1.0 / sample_rate
    # x-axis
    frequency = (
        fft.rfftfreq(x.shape[-1], sample_spacing)
        if real
        else fft.fftfreq(x.shape[-1], sample_spacing)
    )
    frequency = fft.fftshift(frequency)
    if display:
        # y-axis
        if window_type == "none":
            fourier = fft.rfft(signal_value) if real else fft.fft(signal_value)
        else:
            window = signal.get_window(window_type, len(signal_value))
            fourier = (
                fft.rfft(signal_value * window)
                if real
                else fft.fft(signal_value * window)
            )
        fourier = fft.fftshift(fourier)
        fourier = abs(fourier)
        return OrderedPair(x=frequency, y=fourier)

    # for processing
    fourier = fft.rfft(signal_value) if real else fft.fft(signal_value)
    d = {"x": x, "frequency": frequency, "real": fourier.real, "imag": fourier.imag}
    return DataFrame(m=df(data=d))
