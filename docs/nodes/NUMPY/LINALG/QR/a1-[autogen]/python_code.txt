from flojoy import flojoy, Matrix, Scalar
import numpy as np
from collections import namedtuple
from typing import Literal

import numpy.linalg


@flojoy(node_type="default")
def QR(
    default: Matrix,
    mode: str = "reduced",
    select_return: Literal["q", "r", "(h, tau)"] = "q",
) -> Matrix | Scalar:
    

    result = numpy.linalg.qr(
        a=default.m,
        mode=mode,
    )

    return_list = ["q", "r", "(h, tau)"]
    if isinstance(result, tuple):
        res_dict = {}
        num = min(len(result), len(return_list))
        for i in range(num):
            res_dict[return_list[i]] = result[i]
        result = res_dict[select_return]
    else:
        result = result._asdict()
        result = result[select_return]

    if isinstance(result, np.ndarray):
        result = Matrix(m=result)
    elif isinstance(result, np.float64 | float | np.int64 | int):
        result = Scalar(c=float(result))

    return result
