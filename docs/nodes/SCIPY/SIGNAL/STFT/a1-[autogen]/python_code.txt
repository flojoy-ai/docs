from flojoy import OrderedPair, flojoy, Matrix, Scalar
import numpy as np
from collections import namedtuple
from typing import Literal

import scipy.signal


@flojoy(node_type="default")
def STFT(
    default: OrderedPair | Matrix,
    fs: float = 1.0,
    window: str = "hann",
    nperseg: int = 2,
    noverlap: int = 1,
    nfft: int = 2,
    detrend: bool = False,
    return_onesided: bool = True,
    boundary: str = "zeros",
    padded: bool = True,
    axis: int = -1,
    scaling: str = "spectrum",
    select_return: Literal["f", "t", "Zxx"] = "f",
) -> OrderedPair | Matrix | Scalar:
    

    result = scipy.signal.stft(
        x=default.y,
        fs=fs,
        window=window,
        nperseg=nperseg,
        noverlap=noverlap,
        nfft=nfft,
        detrend=detrend,
        return_onesided=return_onesided,
        boundary=boundary,
        padded=padded,
        axis=axis,
        scaling=scaling,
    )

    return_list = ["f", "t", "Zxx"]
    if isinstance(result, tuple):
        res_dict = {}
        num = min(len(result), len(return_list))
        for i in range(num):
            res_dict[return_list[i]] = result[i]
        result = res_dict[select_return]
    else:
        result = result._asdict()
        result = result[select_return]

    if isinstance(result, np.ndarray):
        result = OrderedPair(x=default.x, y=result)
    elif isinstance(result, np.float64 | float | np.int64 | int):
        result = Scalar(c=float(result))

    return result
